{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is computational thinking?"}, {"role": "assistant", "content": "Computational thinking is the process of going from a complex problem and ending up at a clear step-by-step solution that solves parts or the problem as a whole. Computational Thinking can be divided into four parts: Decomposition, abstraction, pattern recognition, and algorithm design."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of computational thinking?"}, {"role": "assistant", "content": "Sure! I will show you how computational thinking can be used to solve the maths problem of finding the sum of a range of numbers. Let’s try and use computational thinking to find the sum of all the numbers from 1 to 200. \nInstead of counting all the numbers one by one (1+2+3+4+5+... etc.), we can turn to the other parts of computational thinking, starting with pattern recognition. We can ask ourselves is there a pattern in the problem? And how often does it repeat? A pattern here is if we add together the highest and the lowest pair of numbers in the range and the second highest and second lowest number and so forth (1+200, 2+199, etc.), it will always result in the number 201. We can also find out how often it repeats by finding out how many of these pairs there are by dividing 200 with 2. \nWe can now turn to abstraction which means focusing on the important information, namely the sum of each pair and the number of pairs. The sum of each pair is 200+1 or 201 and the number of pairs is 200 divided by 2 or 100. This can be expressed as an equation (200+1) * (200/2) which gives 20100. \nTo create a process that independently on the range of numbers will give us a predictable and reliable solution we turn to algorithm design. We can start by finding the steps that are involved in solving the problem. Step 1 of our equation is the range of numbers, 200 + 1 = 201. Step 2 is the range of numbers again, 200/2 = 100. Step 3 is multiplying the results of each of these parts “201” times “100” which gives 20100. We can express this as an equation that can be used to find the sum of all numbers between 1 and any positive number."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is decomposition?"}, {"role": "assistant", "content": "When we are confronted with a complex problem, we want to understand the components of the problem and we can do this by decomposing the problem into smaller, more manageable parts. A way to do so is to identify the actors, objects, and activities that are connected to the problem. A very practical way of doing so is to try and find nouns for actors and objects and verbs for activities. In this way, we can end up with a list of the actors and objects that are connected to the problem and the activities that they carry out in relation to the problem."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of decomposition?"}, {"role": "assistant", "content": "Sure! The problem we use for this example could be the need for reducing carbon emissions attributed to household food consumption. to end up with a clear solution to the problem that can be implemented and tested in real-world settings, we need to understand what makes the problem complex and which parts of the problem that are the most relevant to address. \nA first step for doing so could be through decomposition where we break the problem into smaller parts. We can break our problem up into the very concrete actors, objects, and activities that are interacting in the problem domain. \nThe actors that are present in the problem domain could be the household which can be divided into adults and children and also into shopper and non-shopper. We can also identify the retailer where the food is bought as an actor that is impacting the problem. And the food producers and policy makers as actors that impact what food is available and which regulations that are evident for the food. \nThe objects that are present in the problem domain could be the different food items. It could also be the house or parts of the house such as the garden or kitchen, including the refrigerator, freezer, oven etc. as these are objects that influence the procurement, storage and preparation of food. \nWe can also identify the mode of transportation such as bike, bus, car etc. to and from the store as an object that influences how the actors do shopping and how they transport food to their home. Another object can be the shopping strategy, if the household uses a shopping list or not, and if not, which other methods are used for systemising the shopping so the correct food items are purchased. \nThe last kind of decomposition is to identify activities that connect actors and objects in the problem domain. This could be choosing what food to buy, preparing dinner and so on. If you encounter activities that do not connect actors and objects it can be that the activity occurs only for a single actor or object or that you need to go back and try to identify the missing actor or object"}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "How do I decompose a problem?"}, {"role": "assistant", "content": "When we are working with complex problems, and want to end up with a clear solution to the problem that can be implemented and tested in real-world settings, we need to understand what makes the problem complex and which parts of the problem that are the most relevant to address. Through decomposition we break the problem into smaller parts, specifically into very concrete actors, objects, and activities that are interacting in the problem domain.There are many ways of doing so depending on the perspective, whether it is for making new policies or infrastructure such as supply chains or maybe changing individual behaviour. Keep in mind that the discipline that you work from might change what your decomposition looks like --- whether it is economics, social sciences, management, computer science etc. \nWhen identifying actors, objects and activities it is important both to give room for exploration and critical assessment. With exploration, what is meant is to look for actors, objects and activities that might not be obvious when thinking about the problem. And with critical assessment, what is meant is to evaluate the identified actors, objects, and activities against the formulated problem to make sure that these are central aspects for solving the problem. \nThere is no right answer when identifying actors, objects and activities. Decomposition is an iterative process. Use the exploration and critical assessment to identify and evaluate and thereby qualify the actors, objects, and activities that are relevant for solving the problem. \nTo qualify the decomposition, it is very beneficial, besides from deck research, to do empirical inquiries as this can help qualify the identification of actors, objects, and activities Methods that might be useful for this includes but are not limited to observations, interviews, and contextual inquiries. \nSome techniques that might help in gaining an understanding of the connections between the actors, objects, and activities are Rich Pictures from object oriented analysis and Actor-Network Mapping."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is an actor?"}, {"role": "assistant", "content": "An actor refers to any entity or component that interacts with the system or problem being analyzed. Actors can be users, devices, sensors, or any external agent that has a role in the system. Identifying actors is important because it helps in understanding the different stakeholders involved and their interactions with the system. By decomposing a problem and identifying actors, it becomes easier to define the requirements, behaviors, and responsibilities of each entity within the system. This helps in creating a more comprehensive and detailed understanding of the problem, leading to more effective problem-solving strategies."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of an actor?"}, {"role": "assistant", "content": "Sure! Let's use the problem of needing to reduce carbon emissions attributed to household food consumption as an example. The actors that are present in the problem domain could be the household which can be divided into adults and children and also into shopper and non-shopper. We can also identify the retailer where the food is bought as an actor that is impacting the problem. And the food producers and policy makers as actors that impact what food is available and which regulations that are evident for the food."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is an object?"}, {"role": "assistant", "content": "An object refers to a component or element of a larger problem that has been identified and broken down into smaller, more manageable parts. Objects represent the subproblems or specific aspects of the problem that need to be addressed individually in order to solve the overall problem more effectively. By identifying and defining objects in the decomposition step, individuals can focus on understanding the relationships between these components, analyzing their interactions, and developing strategies to solve each object independently before integrating them into a comprehensive solution. Objects play a crucial role in breaking down complex problems into simpler components and improving the problem-solving process in computational thinking."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of an object?"}, {"role": "assistant", "content": "Sure! Let's use the problem of needing to reduce carbon emissions attributed to household food consumption as an example. The objects that are present in the problem domain could be the different food items. It could also be the house or parts of the house such as the garden or kitchen, including the refrigerator, freezer, oven etc. as these are objects that influence the procurement, storage and preparation of food."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is an activity?"}, {"role": "assistant", "content": "An activity refers to a specific task, operation, or process that needs to be carried out to solve a problem or achieve a desired outcome. Activities are the actions that manipulate, transform, or analyze the objects and data within the problem context. By breaking down a problem into activities, it becomes easier to identify the sequence of steps required to reach a solution. Each activity is typically associated with specific inputs, outputs, and a set of instructions or algorithms to guide its execution. Decomposing a problem into activities helps in clearly defining the tasks that need to be performed and the flow of information or operations between them, leading to a more systematic and structured problem-solving approach. \nActivities need to connect actors and objects in the problem domain. If you encounter activities that do not connect actors and objects it can be that the activity occurs only for a single actor or object or that you need to go back and try to identify the missing actor or object."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of an activity?"}, {"role": "assistant", "content": "Sure! Let's use the problem of needing to reduce carbon emissions attributed to household food consumption as an example. The activities that are present in the problem domain could be choosing what food to buy, preparing dinner and so on. Activities need to connect actors and objects in the problem domain. If you encounter activities that do not connect actors and objects it can be that the activity occurs only for a single actor or object or that you need to go back and try to identify the missing actor or object."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is abstraction?"}, {"role": "assistant", "content": " Abstraction involves cutting away details or characteristics that are not essential for solving the problem. By doing this, we end up with the details that are necessary to focus on --- a simplified version or model of the problem. This model can make the problem more manageable when we are to come up with a solution. \nAbstraction happens already when we are defining a problem that needs to be solved. When we define a problem, we create a mini-world where the problem, and the key actors and objects involved in the problem are present. \nBut abstraction can also be used to evaluate the list of decomposed actors, objects, and activities to make the problem even more specific. This can help make visible that Computational Thinking is not necessarily a step-by-step process but an iterative and reflective process that depends on the specific problem at hand."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of abstraction?"}, {"role": "assistant", "content": "Sure! The problem we use for this example could be the need for reducing carbon emissions attributed to household food consumption. We can make several abstractions that will inevitably shape the solution that can be developed. One abstraction is that food is bought which means that food that is obtained from other sources such as a kitchen garden, gifts or even dumpster diving are left out from the problem domain and therefore also the solution domain."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is pattern recognition?"}, {"role": "assistant", "content": "Pattern recognition is the process of identifying patterns or links between different actors, objects, and activities within the problem domain. It can both be one-time patterns or recurring patterns. Identifying patterns connected to the problem can help us in finding and structuring the dynamics of the problem. In computer science, pattern recognition is a very concrete step towards being able to design the algorithms that can solve a computational problem. However, pattern recognition is also very prominent in other fields. For example in social sciences where we use pattern recognition in situations such as analysing interview data."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of pattern recognition?"}, {"role": "assistant", "content": "Sure! The problem we use for this example could be the need for reducing carbon emissions attributed to household food consumption. Through decomposition we can identify several actors, objects, and activities that are interacting in the problem domain such as household members, retailers, modes of transportation, shopping list, doing shopping, preparing food. We can now take these actors, objects, and activities and explore patterns. One pattern could be that the household members create a shopping list. This is a pattern that happens before shopping. It is a recurring pattern that might involve looking into the refrigerator, talking to household members, considering how much time there is for preparing food and what mode of transportation that is available for carrying out the food shopping. Another pattern could be setting up a kitchen garden which is a one-time pattern that has the possibility to change the procurement of food."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "How do I recognise patterns?"}, {"role": "assistant", "content": "To recognise patterns, we can lay out the actors, objects, and activities we identified in the decomposition step and try to explore the patterns between them."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can patterns occur just once?"}, {"role": "assistant", "content": "Yes, a pattern can be either one-time or recurring. An example of a one-time pattern could be building a house, while walking out of the front door is a recurring pattern."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "How do actors and objects play into pattern recognition?"}, {"role": "assistant", "content": "In pattern recognition, we link actors and objects through the activities that connect them. Patterns can involve one actor or object or they can involve multiple actors and objects."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What are some techniques that facilitate pattern recognition?"}, {"role": "assistant", "content": "Techniques that can facilitate pattern recognition can be to create flow diagrams or event diagrams to visualise and explore individual patterns or to visualise how different patterns interact with each other within the problem domain."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is a flow diagram?"}, {"role": "assistant", "content": "A flow diagram is a visualization of a sequence of actions and movements within a system and/or decision points. They're a detailed explanation of each step in a process, no matter the level of complexity of that process. \nUsing flow diagrams to recognise patterns, our actors and objects act as the status boxes in the diagram, and our activities act as the actions arrows that connect them."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is algorithm design?"}, {"role": "assistant", "content": "In computational thinking, algorithm design basically means creating step-by-step solutions to the problem that can be replicated and always provide a predictable and reliable outcome. Algorithms can both be developed for a computer to execute, which is common for computer science, but it can also be algorithms that solely involve actors or algorithms where actors and objects are co-producing the algorithm. An example of this could be airport security."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is an algorithm?"}, {"role": "assistant", "content": "The term algorithm can sound very complicated and very computer science centered, but it does not have to be. Some of the most common algorithms in our daily lives are cooking or knitting recipes or even the process of tying our shoes. Basically, algorithms are step-by-step instructions that can solve the problem we are working with. These step-by-step instructions are characterised by the fact that they can be replicated and always provide a predictable and reliable outcome."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "Can you give me an example of an algorithm?"}, {"role": "assistant", "content": "Sure! Were we to cook a dish (our problem), the cooking recipe would be the algorithm that leads us to the solution which is the prepared dish. Cooking using the cooking recipe can be done infinitely and will always provide a predictable and reliable outcome. This also means that if the recipe or the algorithm has a fault then whoever will follow the algorithm will have the same flawed solution every time they use the algorithm."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "How do I design an algorithm?"}, {"role": "assistant", "content": "When we make algorithms, no matter if it is for computers or anything else, we plan the steps and assess the performance of the algorithm based on the steps we have defined. If we use cooking as an example, a step could be to dice an onion, the next step could be to put the diced onion onto a heated pan, and put oil on the pan. Assessing these steps, we might find that it is better to swap the second and third step so that we put oil in the pan before the pieces of onion so that the oil can heat up from being in contact with the heat from the pan."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What techniques can I use to design algorithms?"}, {"role": "assistant", "content": "In computer science, we often use techniques such as flowcharts and pseudocode for algorithm design. Pseudocode is code written in a language that is easily comprehensible and that does not need to be functional."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is agent-based modelling?"}, {"role": "assistant", "content": "Agent based modelling is about identifying actions and interactions of autonomous agents, both individual agents or collective entities such as organisations or groups, with the aim of assessing their effect on a system as a whole. \nIn this way, agent-based modelling and computational thinking share a lot of similarities. The decomposition element of computational thinking is a way of identifying agents and their properties and behaviours. The pattern recognition element is about identifying and structuring the dynamics between agents, the interactions and actions that occur for the agents in the model. The abstraction element is about making the model, meaning cutting away features and relationships that are not essential for modelling the problem. The algorithm design element is then about deciding the steps of the agent-based model - the steps towards being able to make a simulation of the problem."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is an agent in agent-based modelling?"}, {"role": "assistant", "content": "An agent is characterised as an autonomous computational individual or object with properties and behaviours. Agents in agent-based modelling are very similar to the actors and objects in the decomposition step of copmutational thinking and to objects from an object-oriented analysis and design paradigm. They are simple entities that differ based on their properties and behaviours such as a car, that can be blue, green, red (properties) and that can be slow, fast, loud or quiet (behaviour)."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What is a model in agent-based modelling?"}, {"role": "assistant", "content": "A model is a presentation of relevant features and relationships of a system or artefact. So what does this mean? A model as a representation means that the model is constructed using a language, diagram or some other communication medium that is independent of the modeller. A model as focusing on relevant features and relationships means that the model is simpler than the real-world phenomena that it represents as it onlyfocuses on the relevant features and relationships. A model as a representation of a system or artefact means that the model is always 'of' something. For example, a model of virus spread or a model of a plane. In agent-based modelling, a model is composed of one or many agents that are characterised by their different properties and behaviours."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What are agent-based models used for?"}, {"role": "assistant", "content": "Agent-based models can be used for simulating the problem over time and thereby gain a better understanding of how the problem might develop over time and which agents are impacting the problem over time in different ways."}]}
{"messages": [{"role": "system", "content": "You are a tutor aiding help with teaching computation thinking."}, {"role": "user", "content": "What tools can I use for agent-based modelling?"}, {"role": "assistant", "content": "Simulation of agent-based models can be made in Netlogo, which is both a programming language and a development environment. Netlogo is developed by the authors of Introduction to Agent-based Modelling, Wilensky and Rand, who use the programming language and development environment to make simulations of agent-based models as ways of, for example, exploring the problem or predicting behaviour in the problem domain."}]}
